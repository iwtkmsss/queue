import React, { useEffect, useState } from 'react';

const API_URL = import.meta.env.VITE_API_URL;

export default function SystemSettings() {
  const [serviceMinutes, setServiceMinutes] = useState('20');
  const [alarmActive, setAlarmActive] = useState('false');
  const [maxWait, setMaxWait] = useState('5');

  useEffect(() => {
    fetch(`${API_URL}/settings/service_duration`)
      .then(res => res.json())
      .then(data => setServiceMinutes(data.value || '20'));

    fetch(`${API_URL}/settings/alarm_active`)
      .then(res => res.json())
      .then(data => setAlarmActive(data.value || 'false'));

    fetch(`${API_URL}/settings/max_wait_multiplier`)
      .then(res => res.json())
      .then(data => setMaxWait(data.value || '4'));
  }, []);

  const handleSave = async () => {
    const requests = [];

    // 1Ô∏è‚É£ –ó–≤–∏—á–∞–π–Ω–∏–π service_duration ‚Äî —É–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∏–π POST
    requests.push(
      fetch(`${API_URL}/settings/`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          key: 'service_minutes',
          value: serviceMinutes,
        }),
      })
    );

    // 2Ô∏è‚É£ alarm_active ‚Äî –æ–∫—Ä–µ–º–∏–π PATCH
    requests.push(
      fetch(`${API_URL}/settings/alarm`, {
        method: 'PATCH',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ value: alarmActive }),
      })
    );

    // 3Ô∏è‚É£ max_wait_multiplier ‚Äî —Ç–µ–∂ —É–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∏–π POST
    requests.push(
      fetch(`${API_URL}/settings/`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          key: 'max_wait_multiplier',
          value: maxWait,
        }),
      })
    );

    try {
      await Promise.all(requests);
      alert('–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–æ!');
    } catch (err) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ:', err);
      alert('–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ');
    }
  };

  return (
    <div style={{ maxWidth: '400px', margin: '0 auto' }}>
      <h2>üîß –°–∏—Å—Ç–µ–º–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è</h2>

      <div style={{ marginBottom: '10px' }}>
        <label>
          ‚è±Ô∏è –¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è (—Ö–≤):
          <input
            type="number"
            value={serviceMinutes}
            onChange={(e) => setServiceMinutes(e.target.value)}
            min="1"
            style={{ marginLeft: '10px', padding: '4px', width: '60px' }}
          />
        </label>
      </div>

      <div style={{ marginBottom: '10px' }}>
        <label>
          üö® –¢—Ä–∏–≤–æ–≥–∞ –∞–∫—Ç–∏–≤–Ω–∞:
          <select
            value={alarmActive}
            onChange={(e) => setAlarmActive(e.target.value)}
            style={{ marginLeft: '10px', padding: '4px' }}
          >
            <option value="true">–¢–∞–∫</option>
            <option value="false">–ù—ñ</option>
          </select>
        </label>
      </div>

      <div style={{ marginBottom: '10px' }}>
        <label>
          ‚è≥ –ú–∞–∫—Å. –º–Ω–æ–∂–Ω–∏–∫ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è:
          <input
            type="number"
            value={maxWait}
            onChange={(e) => setMaxWait(e.target.value)}
            min="1"
            style={{ marginLeft: '10px', padding: '4px', width: '60px' }}
          />
        </label>
      </div>

      <button onClick={handleSave} style={{ padding: '8px 16px' }}>
        üíæ –ó–±–µ—Ä–µ–≥—Ç–∏
      </button>
    </div>
  );
}
